#ifndef ASSEMBLER_ERROR_HANDLING_H
#define ASSEMBLER_ERROR_HANDLING_H

#endif /* ASSEMBLER_ERROR_HANDLING_H */
typedef enum error_code {
    EMPTY_ERROR, /* for better use, the enum will start from 1, so we put here an empty error.*/
    SYNTAX_ERROR,
    LABEL_WITH_NO_DATA_ERROR,
    LABEL_ALREADY_EXISTS_ERROR,
    LABEL_TOO_LONG_ERROR,
    LABEL_CONTAINS_INVALID_CHARACTER_ERROR,
    LABEL_FIRST_CHAR_IS_NOT_ALPHA_ERROR,
    LABEL_IS_OPCODE_ERROR,
    LABEL_IS_DIRECTIVE_ERROR,
    LABEL_IS_REGISTER_ERROR,
    EMPTY_DIRECTIVE_ERROR,
    NOT_EXISTS_DIRECTIVE_ERROR,
    LABEL_IS_ALREADY_EXTERN,
    LABEL_IS_ALREADY_ENTRY,
    DATA_DIRECTIVE_WITH_NO_DATA_ERROR,
    INVALID_NUMBER_ERROR,
    NUMBER_OUT_OF_RANGE_ERROR,
    NO_STRING_ERROR,
    STRING_MUST_BE_ENCLOSED_BY_QUOTES_ERROR,
    ENTRY_OPERAND_LABEL_DOES_NOT_EXIST_ERROR

} error_code;

void handle_error(error_code err, int line_number);